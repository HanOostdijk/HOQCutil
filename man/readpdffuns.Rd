% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_pdf_funs.R
\name{read_pdf}
\alias{read_pdf}
\alias{read_pdf_line}
\alias{read_pdf_fields}
\title{read text of pdf-file by line, cell or table}
\usage{
read_pdf(filename, vtolerance = 6, frame_table = NULL, by = "line")

read_pdf_line(read_pdf_df)

read_pdf_fields(
  filename,
  vtolerance = 2,
  htolerance = 2,
  header_line = 1,
  pageno = 1
)
}
\arguments{
\item{filename}{Character string with path of the pdf-file}

\item{vtolerance}{Numeric scalar with vertical tolerance to fix vertical mismatches}

\item{frame_table}{data.frame indicating data frames on pages. See Details}

\item{by}{Character string with value "line" or "cell" indicating if text is gathered by text line or cell}

\item{read_pdf_df}{data.frame created by \code{read_pdf} function}

\item{htolerance}{Numeric scalar with horizontal tolerance to fix mismatches field contents (field starts before header)}

\item{header_line}{Integer indicating which lines contain the headers of the table}

\item{pageno}{Integer indicating the number of the page to read}
}
\value{
read_pdf returns a data.frame with the fields \cr
"page", "seqnr", "framenr", "width", "height", "space", "x", "y" and "text"  when \code{by} == 'cell' and \cr
"page", "framenr", "seqnr", "x", "y" and "text" when \code{by} == 'line' \cr \cr
read_pdf_line always returns a data.frame with the fields
"page", "framenr", "seqnr", "x", "y" and "text" \cr \cr
read_pdf_fields returns a data.frame with the table . All fields have character values
}
\description{
The function \code{read_pdf} reads the text of pdf-file on cell or line level. \cr
The output of \code{read_pdf} on cell level can be combined by function \code{read_pdf_line} to get the output on line level.\cr
The function \code{read_pdf_fields} reads text of a table from a page of a pdf-file. \cr
}
\section{Details}{

Uses \code{\link[pdftools:pdf_data]{pdftools::pdf_data}} as workhorse . \cr
The \code{frame_table} is a data.frame that indicates the location of the frames in the pages.
The function \code{\link[=cut3d]{cut3d()}} is used to assign a frame number to each cell. See this function for a description


Uses \code{\link[pdftools:pdf_data]{pdftools::pdf_data}} as workhorse . \cr
The fields 'seqnr' and 'x' in the output of read_pdf_line are the attributes of the first cell that contributed to 'text'. \cr \cr
The \code{frame_table} is a data.frame that indicates the location of


Using read_pdf_fields,it is assumed that the table occupies a whole page and that the columns are defined by the words in the header.\cr
In the following example
\preformatted{field1         field2           field3}
\preformatted{v1a v1b        v2a  v2b     v2c  v3a   v3b}
field1 will be filled with "v1a v1b", field2 with "v2a v2b" and field3 with "v3a v3b".\cr
Multiple words in a field are separated by only one blank (even when the original data contains more than one blank)\cr\cr
The actual reading of the file is done with  \code{\link{read_pdf}} and  \code{\link[pdftools:pdf_data]{pdftools::pdf_data}} .
}

\examples{
\dontrun{
df1 <- read_pdf (r"(D:\data\R\TTVA\inputs\TTV Amstelveen teamindeling Senioren VJ22.pdf)", by= "line")
names(df1) # [1] "page"    "framenr" "seqnr"   "x"       "y"       "text"
df1 <- read_pdf (r"(D:\data\R\TTVA\inputs\TTV Amstelveen teamindeling Senioren VJ22.pdf)", by= "cell")
names(df1) # [1] "page"    "framenr" "seqnr"   "width"   "height"  "space"   "x"       "y"       "text"
}

\dontrun{
df1 <- read_pdf (r"(D:\data\R\TTVA\inputs\TTV Amstelveen teamindeling Senioren VJ22.pdf)", by= "cell")
df2 <- read_pdf_line(df1)
names(df1) # [1] "page"    "framenr" "seqnr"   "x"       "y"       "text"
}
\dontrun{
df1 <- read_pdf_fields (r"(D:\data\R\TTVA\inputs\TTV Amstelveen teamindeling Senioren VJ22.pdf)" )
names(df1) # [1] "Teamnr."    "Klasse"     "Teamrating" "Captain"    "Speler"     "Rating"     "Speeldag"
}

}
